- attributes:
  - doc: Value is Storage object for time-series 2-D image data
    name: help
    type: text
    value: Storage object for time-series 2-D image data
  datasets:
  - doc: Number of pixels on x, y, (and z) axes.
    name: dimension
    type: int32
  - doc: Format of image. If this is 'external' then the field external_file contains
      the path or URL information to that file. For tiff, png, jpg, etc, the binary
      representation of the image is stored in data. If the format is raw then the
      fields bit_per_pixel and dimension are used. For raw images, only a single channel
      is stored (eg, red).
    name: format
    type: text
  - doc: Number of bit per image pixel.
    name: bits_per_pixel
    type: int32
  - doc: Either binary data containing image or empty.
    name: data
    type: number
  - attributes:
    - doc: Each entry is the frame number (within the full ImageSeries) of the first
        frame in the corresponding external_file entry. This serves as an index to
        what frames each file contains, allowing random access.Zero-based indexing
        is used.  (The first element will always be zero).
      name: starting_frame
      type: int
    doc: 'Path or URL to one or more external file(s). Field only present if format=external.
      NOTE: this is only relevant if the image is stored in the file system as one
      or more image file(s). This field should NOT be used if the image is stored
      in another HDF5 file and that file is HDF5 linked to this file.'
    name: external_file
    required: false
    type: text
  doc: 'General image data that is common between acquisition and stimulus time series.
    Sometimes the image data is stored in the HDF5 file in a raw format while other
    times it will be stored as an external image file in the host file system. The
    data field will either be binary data or empty. TimeSeries::data array structure:
    [frame] [y][x] or [frame][z][y][x].'
  neurodata_type: TimeSeries
  neurodata_type_def: ImageSeries
- attributes:
  - doc: Value is An alpha mask that is applied to a presented visual stimulus
    name: help
    type: text
    value: An alpha mask that is applied to a presented visual stimulus
  datasets:
  - doc: Path to linked ImageSeries
    name: masked_imageseries_path
    type: text
  doc: An alpha mask that is applied to a presented visual stimulus. The data[] array
    contains an array of mask values that are applied to the displayed image. Mask
    values are stored as RGBA. Mask can vary with time. The timestamps array indicates
    the starting time of a mask, and that mask pattern continues until it's explicitly
    changed.
  links:
  - doc: Link to ImageSeries that mask is applied to.
    name: masked_imageseries
    target_type: ImageSeries
  neurodata_type: ImageSeries
  neurodata_type_def: ImageMaskSeries
- attributes:
  - doc: Value is Time-series image stack for optical recording or stimulus
    name: help
    type: text
    value: Time-series image stack for optical recording or stimulus
  datasets:
  - doc: Description of image relative to some reference frame (e.g., which way is
      up). Must also specify frame of reference.
    name: orientation
    type: text
  - doc: Width, height and depto of image, or imaged area (meters).
    name: field_of_view
    type: float32
  - doc: Distance from camera/monitor to target/eye.
    name: distance
    type: float32
  doc: Image data that is presented or recorded. A stimulus template movie will be
    stored only as an image. When the image is presented as stimulus, additional data
    is required, such as field of view (eg, how much of the visual field the image
    covers, or how what is the area of the target being imaged). If the OpticalSeries
    represents acquired imaging data, orientation is also important.
  neurodata_type: ImageSeries
  neurodata_type_def: OpticalSeries
- attributes:
  - doc: Value is ROI responses over an imaging plane. Each row in data[] should correspond
      to the signal from one ROI
    name: help
    type: text
    value: ROI responses over an imaging plane. Each row in data[] should correspond
      to the signal from one ROI
  datasets:
  - doc: List of ROIs represented, one name for each row of data[].
    name: roi_names
    type: text
  - doc: Signals from ROIs
    name: data
    type: float32
  - doc: Path to segmentation module.
    name: segmentation_interface_path
    type: text
  doc: ROI responses over an imaging plane. Each row in data[] should correspond to
    the signal from one ROI.
  links:
  - doc: HDF5 link to image segmentation module defining ROIs.
    name: segmentation_interface
    target_type: ImageSegmentation
  neurodata_type: TimeSeries
  neurodata_type_def: RoiResponseSeries
- attributes:
  - doc: Value is A sequence that is generated from an existing image stack. Frames
      can be presented in an arbitrary order. The data[] field stores frame number
      in reference stack
    name: help
    type: text
    value: A sequence that is generated from an existing image stack. Frames can be
      presented in an arbitrary order. The data[] field stores frame number in reference
      stack
  datasets:
  - doc: Path to linked TimeSeries
    name: indexed_timeseries_path
    type: text
  - doc: Index of the frame in the referenced ImageSeries.
    name: data
    type: int
  doc: Stores indices to image frames stored in an ImageSeries. The purpose of the
    ImageIndexSeries is to allow a static image stack to be stored somewhere, and
    the images in the stack to be referenced out-of-order. This can be for the display
    of individual images, or of movie segments (as a movie is simply a series of images).
    The data field stores the index of the frame in the referenced ImageSeries, and
    the timestamps array indicates when that image was displayed.
  links:
  - doc: HDF5 link to TimeSeries containing images that are indexed.
    name: indexed_timeseries
    target_type: ImageSeries
  neurodata_type: TimeSeries
  neurodata_type_def: IndexSeries
